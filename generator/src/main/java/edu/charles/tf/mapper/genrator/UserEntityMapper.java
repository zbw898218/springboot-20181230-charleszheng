package edu.charles.tf.mapper.genrator;

import edu.charles.tf.entity.UserEntity;
import edu.charles.tf.entity.UserEntityExample;
import edu.charles.tf.entity.UserEntityWithBLOBs;
import java.util.List;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface UserEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Wed Jan 02 16:07:16 CST 2019
     */
    @SelectProvider(type=UserEntitySqlProvider.class, method="countByExample")
    long countByExample(UserEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Wed Jan 02 16:07:16 CST 2019
     */
    @DeleteProvider(type=UserEntitySqlProvider.class, method="deleteByExample")
    int deleteByExample(UserEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Wed Jan 02 16:07:16 CST 2019
     */
    @Insert({
        "insert into user (Host, User, Select_priv, ",
        "Insert_priv, Update_priv, ",
        "Delete_priv, Create_priv, ",
        "Drop_priv, Reload_priv, ",
        "Shutdown_priv, Process_priv, ",
        "File_priv, Grant_priv, References_priv, ",
        "Index_priv, Alter_priv, ",
        "Show_db_priv, Super_priv, ",
        "Create_tmp_table_priv, Lock_tables_priv, ",
        "Execute_priv, Repl_slave_priv, ",
        "Repl_client_priv, Create_view_priv, ",
        "Show_view_priv, Create_routine_priv, ",
        "Alter_routine_priv, Create_user_priv, ",
        "Event_priv, Trigger_priv, ",
        "Create_tablespace_priv, ssl_type, ",
        "max_questions, max_updates, ",
        "max_connections, max_user_connections, ",
        "plugin, password_expired, ",
        "password_last_changed, password_lifetime, ",
        "account_locked, ssl_cipher, ",
        "x509_issuer, x509_subject, ",
        "authentication_string)",
        "values (#{host,jdbcType=CHAR}, #{user,jdbcType=CHAR}, #{selectPriv,jdbcType=CHAR}, ",
        "#{insertPriv,jdbcType=CHAR}, #{updatePriv,jdbcType=CHAR}, ",
        "#{deletePriv,jdbcType=CHAR}, #{createPriv,jdbcType=CHAR}, ",
        "#{dropPriv,jdbcType=CHAR}, #{reloadPriv,jdbcType=CHAR}, ",
        "#{shutdownPriv,jdbcType=CHAR}, #{processPriv,jdbcType=CHAR}, ",
        "#{filePriv,jdbcType=CHAR}, #{grantPriv,jdbcType=CHAR}, #{referencesPriv,jdbcType=CHAR}, ",
        "#{indexPriv,jdbcType=CHAR}, #{alterPriv,jdbcType=CHAR}, ",
        "#{showDbPriv,jdbcType=CHAR}, #{superPriv,jdbcType=CHAR}, ",
        "#{createTmpTablePriv,jdbcType=CHAR}, #{lockTablesPriv,jdbcType=CHAR}, ",
        "#{executePriv,jdbcType=CHAR}, #{replSlavePriv,jdbcType=CHAR}, ",
        "#{replClientPriv,jdbcType=CHAR}, #{createViewPriv,jdbcType=CHAR}, ",
        "#{showViewPriv,jdbcType=CHAR}, #{createRoutinePriv,jdbcType=CHAR}, ",
        "#{alterRoutinePriv,jdbcType=CHAR}, #{createUserPriv,jdbcType=CHAR}, ",
        "#{eventPriv,jdbcType=CHAR}, #{triggerPriv,jdbcType=CHAR}, ",
        "#{createTablespacePriv,jdbcType=CHAR}, #{sslType,jdbcType=CHAR}, ",
        "#{maxQuestions,jdbcType=INTEGER}, #{maxUpdates,jdbcType=INTEGER}, ",
        "#{maxConnections,jdbcType=INTEGER}, #{maxUserConnections,jdbcType=INTEGER}, ",
        "#{plugin,jdbcType=CHAR}, #{passwordExpired,jdbcType=CHAR}, ",
        "#{passwordLastChanged,jdbcType=TIMESTAMP}, #{passwordLifetime,jdbcType=SMALLINT}, ",
        "#{accountLocked,jdbcType=CHAR}, #{sslCipher,jdbcType=LONGVARBINARY}, ",
        "#{x509Issuer,jdbcType=LONGVARBINARY}, #{x509Subject,jdbcType=LONGVARBINARY}, ",
        "#{authenticationString,jdbcType=LONGVARCHAR})"
    })
    int insert(UserEntityWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Wed Jan 02 16:07:16 CST 2019
     */
    @InsertProvider(type=UserEntitySqlProvider.class, method="insertSelective")
    int insertSelective(UserEntityWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Wed Jan 02 16:07:16 CST 2019
     */
    @SelectProvider(type=UserEntitySqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="Host", property="host", jdbcType=JdbcType.CHAR),
        @Result(column="User", property="user", jdbcType=JdbcType.CHAR),
        @Result(column="Select_priv", property="selectPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Insert_priv", property="insertPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Update_priv", property="updatePriv", jdbcType=JdbcType.CHAR),
        @Result(column="Delete_priv", property="deletePriv", jdbcType=JdbcType.CHAR),
        @Result(column="Create_priv", property="createPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Drop_priv", property="dropPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Reload_priv", property="reloadPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Shutdown_priv", property="shutdownPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Process_priv", property="processPriv", jdbcType=JdbcType.CHAR),
        @Result(column="File_priv", property="filePriv", jdbcType=JdbcType.CHAR),
        @Result(column="Grant_priv", property="grantPriv", jdbcType=JdbcType.CHAR),
        @Result(column="References_priv", property="referencesPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Index_priv", property="indexPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Alter_priv", property="alterPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Show_db_priv", property="showDbPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Super_priv", property="superPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Create_tmp_table_priv", property="createTmpTablePriv", jdbcType=JdbcType.CHAR),
        @Result(column="Lock_tables_priv", property="lockTablesPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Execute_priv", property="executePriv", jdbcType=JdbcType.CHAR),
        @Result(column="Repl_slave_priv", property="replSlavePriv", jdbcType=JdbcType.CHAR),
        @Result(column="Repl_client_priv", property="replClientPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Create_view_priv", property="createViewPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Show_view_priv", property="showViewPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Create_routine_priv", property="createRoutinePriv", jdbcType=JdbcType.CHAR),
        @Result(column="Alter_routine_priv", property="alterRoutinePriv", jdbcType=JdbcType.CHAR),
        @Result(column="Create_user_priv", property="createUserPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Event_priv", property="eventPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Trigger_priv", property="triggerPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Create_tablespace_priv", property="createTablespacePriv", jdbcType=JdbcType.CHAR),
        @Result(column="ssl_type", property="sslType", jdbcType=JdbcType.CHAR),
        @Result(column="max_questions", property="maxQuestions", jdbcType=JdbcType.INTEGER),
        @Result(column="max_updates", property="maxUpdates", jdbcType=JdbcType.INTEGER),
        @Result(column="max_connections", property="maxConnections", jdbcType=JdbcType.INTEGER),
        @Result(column="max_user_connections", property="maxUserConnections", jdbcType=JdbcType.INTEGER),
        @Result(column="plugin", property="plugin", jdbcType=JdbcType.CHAR),
        @Result(column="password_expired", property="passwordExpired", jdbcType=JdbcType.CHAR),
        @Result(column="password_last_changed", property="passwordLastChanged", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="password_lifetime", property="passwordLifetime", jdbcType=JdbcType.SMALLINT),
        @Result(column="account_locked", property="accountLocked", jdbcType=JdbcType.CHAR),
        @Result(column="ssl_cipher", property="sslCipher", jdbcType=JdbcType.LONGVARBINARY),
        @Result(column="x509_issuer", property="x509Issuer", jdbcType=JdbcType.LONGVARBINARY),
        @Result(column="x509_subject", property="x509Subject", jdbcType=JdbcType.LONGVARBINARY),
        @Result(column="authentication_string", property="authenticationString", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<UserEntityWithBLOBs> selectByExampleWithBLOBs(UserEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Wed Jan 02 16:07:16 CST 2019
     */
    @SelectProvider(type=UserEntitySqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="Host", property="host", jdbcType=JdbcType.CHAR),
        @Result(column="User", property="user", jdbcType=JdbcType.CHAR),
        @Result(column="Select_priv", property="selectPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Insert_priv", property="insertPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Update_priv", property="updatePriv", jdbcType=JdbcType.CHAR),
        @Result(column="Delete_priv", property="deletePriv", jdbcType=JdbcType.CHAR),
        @Result(column="Create_priv", property="createPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Drop_priv", property="dropPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Reload_priv", property="reloadPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Shutdown_priv", property="shutdownPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Process_priv", property="processPriv", jdbcType=JdbcType.CHAR),
        @Result(column="File_priv", property="filePriv", jdbcType=JdbcType.CHAR),
        @Result(column="Grant_priv", property="grantPriv", jdbcType=JdbcType.CHAR),
        @Result(column="References_priv", property="referencesPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Index_priv", property="indexPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Alter_priv", property="alterPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Show_db_priv", property="showDbPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Super_priv", property="superPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Create_tmp_table_priv", property="createTmpTablePriv", jdbcType=JdbcType.CHAR),
        @Result(column="Lock_tables_priv", property="lockTablesPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Execute_priv", property="executePriv", jdbcType=JdbcType.CHAR),
        @Result(column="Repl_slave_priv", property="replSlavePriv", jdbcType=JdbcType.CHAR),
        @Result(column="Repl_client_priv", property="replClientPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Create_view_priv", property="createViewPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Show_view_priv", property="showViewPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Create_routine_priv", property="createRoutinePriv", jdbcType=JdbcType.CHAR),
        @Result(column="Alter_routine_priv", property="alterRoutinePriv", jdbcType=JdbcType.CHAR),
        @Result(column="Create_user_priv", property="createUserPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Event_priv", property="eventPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Trigger_priv", property="triggerPriv", jdbcType=JdbcType.CHAR),
        @Result(column="Create_tablespace_priv", property="createTablespacePriv", jdbcType=JdbcType.CHAR),
        @Result(column="ssl_type", property="sslType", jdbcType=JdbcType.CHAR),
        @Result(column="max_questions", property="maxQuestions", jdbcType=JdbcType.INTEGER),
        @Result(column="max_updates", property="maxUpdates", jdbcType=JdbcType.INTEGER),
        @Result(column="max_connections", property="maxConnections", jdbcType=JdbcType.INTEGER),
        @Result(column="max_user_connections", property="maxUserConnections", jdbcType=JdbcType.INTEGER),
        @Result(column="plugin", property="plugin", jdbcType=JdbcType.CHAR),
        @Result(column="password_expired", property="passwordExpired", jdbcType=JdbcType.CHAR),
        @Result(column="password_last_changed", property="passwordLastChanged", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="password_lifetime", property="passwordLifetime", jdbcType=JdbcType.SMALLINT),
        @Result(column="account_locked", property="accountLocked", jdbcType=JdbcType.CHAR)
    })
    List<UserEntity> selectByExample(UserEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Wed Jan 02 16:07:16 CST 2019
     */
    @UpdateProvider(type=UserEntitySqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") UserEntityWithBLOBs record, @Param("example") UserEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Wed Jan 02 16:07:16 CST 2019
     */
    @UpdateProvider(type=UserEntitySqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") UserEntityWithBLOBs record, @Param("example") UserEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Wed Jan 02 16:07:16 CST 2019
     */
    @UpdateProvider(type=UserEntitySqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") UserEntity record, @Param("example") UserEntityExample example);
}